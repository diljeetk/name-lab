{"version":3,"sources":["components/Header/Header.jsx","components/SearchBox/SearchBox.jsx","components/NameCard/NameCard.jsx","components/ResultsContainer/ResultsContainer.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["Header","headerExpanded","className","src","alt","SearchBox","onInputChange","onChange","event","target","value","placeholder","NameCard","suggestedName","rel","href","id","ResultsContainer","suggestedNames","suggestedNamesJSX","map","name","length","require","App","state","handleInputChange","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAeeA,EAZA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACd,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,wGACJC,IAAI,cACJF,UAAS,qBAAgBD,EAAc,iDAE3C,oBAAIC,UAAS,oBAAeD,EAAc,6CAA1C,2BCIGI,G,MAZG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,OACI,qBAAKJ,UAAU,mBAAf,SACI,uBACIK,SAAU,SAACC,GAAD,OAAWF,EAAcE,EAAMC,OAAOC,QAChDC,YAAY,gBACZT,UAAU,qBCYXU,G,MAjBC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACf,OACI,mBACIJ,OAAO,SACPK,IAAI,aACJZ,UAAU,YACVa,KAAI,UAPK,mEAOL,OAAoBF,GAJ5B,SAMI,qBAAKX,UAAU,mBAAmBc,GAAIH,EAAtC,SACI,oBAAGX,UAAU,cAAb,UACKW,EADL,4CCIDI,G,MAbU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAClBC,EAAoBD,EAAeE,KAAI,SAAAC,GACzC,OACI,cAAC,EAAD,CAAUR,cAAeQ,OAGjC,OACI,qBAAKnB,UAAU,oBAAf,SACSgB,EAAeI,OAAS,GAAKH,MCNxCE,G,MAAOE,EAAQ,KAgCLC,E,4MA7BZC,MAAM,CACFxB,gBAAgB,EAChBiB,eAAgB,I,EAGpBQ,kBAAoB,SAAChB,GAEjB,EAAKiB,SAAS,CACV1B,iBAAgBS,EAAMY,OAAS,GAC/BJ,eAAgBR,EAAQW,EAAKX,GAAS,M,4CAI9C,WACI,OACI,gCACI,cAAC,EAAD,CAAQT,eAAgB2B,KAAKH,MAAMxB,iBACnC,cAAC,EAAD,CAAWK,cAAesB,KAAKF,oBAC/B,cAAC,EAAD,CAAkBR,eAAgBU,KAAKH,MAAMP,wB,GAnB3CW,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7b5ef0b7.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = ({ headerExpanded }) => {\n    return(\n        <div className=\"head-container\">\n            <img\n                src='https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png'\n                alt='HeaderImage'\n                className={`head-image ${headerExpanded ? `head-image-expanded` : `head-image-contracted`}`}\n            />\n            <h1 className={`head-text ${headerExpanded ? `head-text-expanded` : `head-text-contracted`}`}>Name-Lab!</h1>\n        </div>\n    )\n}\nexport default Header;","import React from 'react';\nimport './SearchBox.css';\n\nconst SearchBox = ({ onInputChange }) => {\n    return (\n        <div className=\"search-container\">\n            <input\n                onChange={(event) => onInputChange(event.target.value)}\n                placeholder=\"type keywords\"\n                className=\"search-input\"\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\nimport './NameCard.css';\n\nconst nameCheapUrl = 'https://www.namecheap.com/domains/registration/results/?domain=';\nconst NameCard =({ suggestedName }) => {\n    return (\n        <a \n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"card-link\"\n            href={`${nameCheapUrl}${suggestedName}`}\n        >\n            <div className=\"result-name-card\" id={suggestedName}>\n                <p className=\"result-name\">\n                    {suggestedName}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </p>\n            </div>\n        </a>\n    )\n}\n\nexport default NameCard;","import React from 'react';\nimport NameCard from '../NameCard/NameCard'\nimport './ResultsContainer.css';\n\nconst ResultsContainer = ({ suggestedNames }) => {\n    const suggestedNamesJSX = suggestedNames.map(name => {\n        return (\n            <NameCard suggestedName={name}/>\n        )\n    })\n    return(\n        <div className=\"results-container\">\n                {suggestedNames.length > 0 && suggestedNamesJSX}\n        </div>\n    )\n}\n\nexport default ResultsContainer;","import React from 'react';\nimport Header from '../Header/Header';\nimport SearchBox from '../SearchBox/SearchBox';\nimport ResultsContainer from '../ResultsContainer/ResultsContainer';\nimport './App.css';\n\nconst name = require('@rstacruz/startup-name-generator');\n\nclass App extends React.Component{\n    state={\n        headerExpanded: true,\n        suggestedNames: [],\n    }\n\n    handleInputChange = (value) => {\n        \n        this.setState({\n            headerExpanded: value.length > 0 ? false : true,\n            suggestedNames: value ? name(value) : []\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <Header headerExpanded={this.state.headerExpanded}/>\n                <SearchBox onInputChange={this.handleInputChange} />\n                <ResultsContainer suggestedNames={this.state.suggestedNames}/>\n            </div>\n        );\n    }\n} \n\n// function App() {\n//     return (\n//         <h1>THis is my functional component</h1>\n//     )\n// }\n export default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}